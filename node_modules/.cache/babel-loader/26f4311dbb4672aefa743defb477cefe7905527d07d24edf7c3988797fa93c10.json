{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jo\\xE3o\\\\Desktop\\\\ProjectLovelty\\\\GitHubTestJoaoBernardino\\\\src\\\\Pages\\\\Repositories.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useFetchData from \"../apiFetches/FetchData\";\nimport Pagination from \"../components/generics/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Repositories = _ref => {\n  _s();\n  let {\n    reposUrl\n  } = _ref;\n  const repoData = useFetchData(reposUrl);\n  const [postsPerPage] = useState(10);\n  const [currentPage, setCurrentPage] = useState(1);\n  if (repoData.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Get current page posts\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = repoData.data.slice(indexOfFirstPost, indexOfLastPost);\n  console.log(currentPosts);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: [currentPosts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [post.name, post.description]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Pagination, {\n        postsPerPage: postsPerPage,\n        totalPosts: repoData.data.length,\n        paginate: pageNumber => setCurrentPage(pageNumber)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Repositories, \"OUQbwj1Hhu0kz+kULK3KvPfYBtc=\", false, function () {\n  return [useFetchData];\n});\n_c = Repositories;\nexport default Repositories;\nvar _c;\n$RefreshReg$(_c, \"Repositories\");","map":{"version":3,"names":["useState","useFetchData","Pagination","Repositories","reposUrl","repoData","postsPerPage","currentPage","setCurrentPage","loading","indexOfLastPost","indexOfFirstPost","currentPosts","data","slice","console","log","map","post","name","description","id","length","pageNumber"],"sources":["C:/Users/JoÃ£o/Desktop/ProjectLovelty/GitHubTestJoaoBernardino/src/Pages/Repositories.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport useFetchData from \"../apiFetches/FetchData\";\r\nimport Pagination from \"../components/generics/Pagination\";\r\n\r\nconst Repositories = ({ reposUrl }) => {\r\n  const repoData = useFetchData(reposUrl);\r\n  const [postsPerPage] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  if (repoData.loading) {\r\n    return <div>Loading</div>;\r\n  }\r\n\r\n  // Get current page posts\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = repoData.data.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  console.log(currentPosts);\r\n  return (\r\n    <>\r\n      <div className=\"container mt-5\">\r\n        {currentPosts.map((post) => (\r\n          <li key={post.id} className=\"list-group-item\">\r\n            {post.name}\r\n            {post.description}\r\n          </li>\r\n        ))}\r\n        <Pagination\r\n          postsPerPage={postsPerPage}\r\n          totalPosts={repoData.data.length}\r\n          paginate={(pageNumber) => setCurrentPage(pageNumber)}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Repositories;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,UAAU,MAAM,mCAAmC;AAAC;AAAA;AAE3D,MAAMC,YAAY,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAChC,MAAMC,QAAQ,GAAGJ,YAAY,CAACG,QAAQ,CAAC;EACvC,MAAM,CAACE,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAEjD,IAAIK,QAAQ,CAACI,OAAO,EAAE;IACpB,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB;EAC3B;;EAEA;EACA,MAAMC,eAAe,GAAGH,WAAW,GAAGD,YAAY;EAClD,MAAMK,gBAAgB,GAAGD,eAAe,GAAGJ,YAAY;EACvD,MAAMM,YAAY,GAAGP,QAAQ,CAACQ,IAAI,CAACC,KAAK,CAACH,gBAAgB,EAAED,eAAe,CAAC;EAE3EK,OAAO,CAACC,GAAG,CAACJ,YAAY,CAAC;EACzB,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,gBAAgB;MAAA,WAC5BA,YAAY,CAACK,GAAG,CAAEC,IAAI,iBACrB;QAAkB,SAAS,EAAC,iBAAiB;QAAA,WAC1CA,IAAI,CAACC,IAAI,EACTD,IAAI,CAACE,WAAW;MAAA,GAFVF,IAAI,CAACG,EAAE;QAAA;QAAA;QAAA;MAAA,QAIjB,CAAC,eACF,QAAC,UAAU;QACT,YAAY,EAAEf,YAAa;QAC3B,UAAU,EAAED,QAAQ,CAACQ,IAAI,CAACS,MAAO;QACjC,QAAQ,EAAGC,UAAU,IAAKf,cAAc,CAACe,UAAU;MAAE;QAAA;QAAA;QAAA;MAAA,QACrD;IAAA;MAAA;MAAA;MAAA;IAAA;EACE,iBACL;AAEP,CAAC;AAAC,GAhCIpB,YAAY;EAAA,QACCF,YAAY;AAAA;AAAA,KADzBE,YAAY;AAiClB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}