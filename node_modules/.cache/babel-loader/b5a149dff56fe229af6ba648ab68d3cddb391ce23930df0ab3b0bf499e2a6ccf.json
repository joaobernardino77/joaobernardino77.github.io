{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jo\\xE3o\\\\Desktop\\\\ProjectLovelty\\\\GitHubTestJoaoBernardino\\\\src\\\\Pages\\\\User.jsx\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport useFetchData from \"../components/generics/FetchData\";\nimport { RedirectButton } from \"../components/generics/RedirectButton\";\nimport UserCard from \"../components/user/UserCard\";\nimport { GITHUB_URI } from \"../constants/constants\";\nimport Repositories from \"./Repositories\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst User = () => {\n  _s();\n  const {\n    user\n  } = useParams();\n  const apiData = useFetchData(`${GITHUB_URI}/users/${user}`);\n  //Extract only what is required from the api\n  const {\n    avatar_url,\n    login,\n    repos_url,\n    public_repos\n  } = apiData.data;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(RedirectButton, {\n      previousPage: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), apiData.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(UserCard, {\n        avatar: avatar_url,\n        name: login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Repositories, {\n        reposUrl: repos_url,\n        reposNumber: public_repos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n_s(User, \"TGpsf2qpXDwF645Vreu+aaKsQ7g=\", false, function () {\n  return [useParams, useFetchData];\n});\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["useParams","useFetchData","RedirectButton","UserCard","GITHUB_URI","Repositories","User","user","apiData","avatar_url","login","repos_url","public_repos","data","loading"],"sources":["C:/Users/JoÃ£o/Desktop/ProjectLovelty/GitHubTestJoaoBernardino/src/Pages/User.jsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport useFetchData from \"../components/generics/FetchData\";\r\nimport { RedirectButton } from \"../components/generics/RedirectButton\";\r\nimport UserCard from \"../components/user/UserCard\";\r\nimport { GITHUB_URI } from \"../constants/constants\";\r\nimport Repositories from \"./Repositories\";\r\n\r\nconst User = () => {\r\n  const { user } = useParams();\r\n  const apiData = useFetchData(`${GITHUB_URI}/users/${user}`);\r\n  //Extract only what is required from the api\r\n  const { avatar_url, login, repos_url, public_repos } = apiData.data;\r\n\r\n  return (\r\n    <>\r\n      <RedirectButton previousPage={\"/\"} />\r\n      {apiData.loading ? (\r\n        <div>Loading</div>\r\n      ) : (\r\n        <>\r\n          <UserCard avatar={avatar_url} name={login} />\r\n          <Repositories reposUrl={repos_url} reposNumber={public_repos} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default User;\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,YAAY,MAAM,kCAAkC;AAC3D,SAASC,cAAc,QAAQ,uCAAuC;AACtE,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,SAASC,UAAU,QAAQ,wBAAwB;AACnD,OAAOC,YAAY,MAAM,gBAAgB;AAAC;AAAA;AAE1C,MAAMC,IAAI,GAAG,MAAM;EAAA;EACjB,MAAM;IAAEC;EAAK,CAAC,GAAGP,SAAS,EAAE;EAC5B,MAAMQ,OAAO,GAAGP,YAAY,CAAE,GAAEG,UAAW,UAASG,IAAK,EAAC,CAAC;EAC3D;EACA,MAAM;IAAEE,UAAU;IAAEC,KAAK;IAAEC,SAAS;IAAEC;EAAa,CAAC,GAAGJ,OAAO,CAACK,IAAI;EAEnE,oBACE;IAAA,wBACE,QAAC,cAAc;MAAC,YAAY,EAAE;IAAI;MAAA;MAAA;MAAA;IAAA,QAAG,EACpCL,OAAO,CAACM,OAAO,gBACd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB,gBAElB;MAAA,wBACE,QAAC,QAAQ;QAAC,MAAM,EAAEL,UAAW;QAAC,IAAI,EAAEC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eAC7C,QAAC,YAAY;QAAC,QAAQ,EAAEC,SAAU;QAAC,WAAW,EAAEC;MAAa;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA,gBAEnE;EAAA,gBACA;AAEP,CAAC;AAAC,GAnBIN,IAAI;EAAA,QACSN,SAAS,EACVC,YAAY;AAAA;AAAA,KAFxBK,IAAI;AAoBV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}