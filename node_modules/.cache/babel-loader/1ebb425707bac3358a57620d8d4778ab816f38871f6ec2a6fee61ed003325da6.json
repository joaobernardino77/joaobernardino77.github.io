{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nconst useFetchData = function (url) {\n  _s();\n  let dependency = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  let conditionToExecute = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  let redirect = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  const [data, setData] = useState({});\n  const [loading, setLoading] = useState(true); //0- not started, 1- started, 2- finished\n  const [error, setError] = useState(false);\n  const navigate = useNavigate();\n  const fetchData = async () => {\n    try {\n      const {\n        data: response\n      } = await axios.get(`${url}`);\n      if (redirect) navigate(redirect, {\n        state: response\n      });else setData(response);\n    } catch (error) {\n      setError(true);\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    if (conditionToExecute) fetchData();else return {};\n  }, dependency);\n  return {\n    data,\n    loading,\n    error\n  };\n};\n_s(useFetchData, \"lywTApA5IkwGmdLfprbVDpnWAFo=\", false, function () {\n  return [useNavigate];\n});\nexport default useFetchData;","map":{"version":3,"names":["useEffect","useState","axios","useNavigate","useFetchData","url","dependency","conditionToExecute","redirect","data","setData","loading","setLoading","error","setError","navigate","fetchData","response","get","state"],"sources":["C:/Users/JoÃ£o/Desktop/ProjectLovelty/GitHubTestJoaoBernardino/src/components/generics/FetchData.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst useFetchData = (\r\n  url,\r\n  dependency = [],\r\n  conditionToExecute = true,\r\n  redirect = null\r\n) => {\r\n  const [data, setData] = useState({});\r\n  const [loading, setLoading] = useState(true); //0- not started, 1- started, 2- finished\r\n  const [error, setError] = useState(false);\r\n  const navigate = useNavigate();\r\n  const fetchData = async () => {\r\n    try {\r\n      const { data: response } = await axios.get(`${url}`);\r\n      if (redirect) navigate(redirect, { state: response });\r\n      else setData(response);\r\n    } catch (error) {\r\n      setError(true);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  useEffect(() => {\r\n    if (conditionToExecute) fetchData();\r\n    else return {};\r\n  }, dependency);\r\n\r\n  return {\r\n    data,\r\n    loading,\r\n    error,\r\n  };\r\n};\r\n\r\nexport default useFetchData;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG,UACnBC,GAAG,EAIA;EAAA;EAAA,IAHHC,UAAU,uEAAG,EAAE;EAAA,IACfC,kBAAkB,uEAAG,IAAI;EAAA,IACzBC,QAAQ,uEAAG,IAAI;EAEf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAMc,QAAQ,GAAGZ,WAAW,EAAE;EAC9B,MAAMa,SAAS,GAAG,YAAY;IAC5B,IAAI;MACF,MAAM;QAAEP,IAAI,EAAEQ;MAAS,CAAC,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAE,GAAEb,GAAI,EAAC,CAAC;MACpD,IAAIG,QAAQ,EAAEO,QAAQ,CAACP,QAAQ,EAAE;QAAEW,KAAK,EAAEF;MAAS,CAAC,CAAC,CAAC,KACjDP,OAAO,CAACO,QAAQ,CAAC;IACxB,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdC,QAAQ,CAAC,IAAI,CAAC;IAChB;IACAF,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EACDZ,SAAS,CAAC,MAAM;IACd,IAAIO,kBAAkB,EAAES,SAAS,EAAE,CAAC,KAC/B,OAAO,CAAC,CAAC;EAChB,CAAC,EAAEV,UAAU,CAAC;EAEd,OAAO;IACLG,IAAI;IACJE,OAAO;IACPE;EACF,CAAC;AACH,CAAC;AAAC,GA9BIT,YAAY;EAAA,QASCD,WAAW;AAAA;AAuB9B,eAAeC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}